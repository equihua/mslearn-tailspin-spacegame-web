### YamlMime:Yaml

# metadata:
# ms.openlocfilehash: f45b0605ba62c4c7622de7d0ec598c4d71e09614
# ms.sourcegitcommit: 52128e1e0cb6e7de6806013aec318b8c01dd2376
# ms.translationtype: HT
# ms.contentlocale: es-ES
# ms.lasthandoff: 02/14/2021
# ms.locfileid: "104286851"



trigger:
- '*'

pool:  
  vmImage: 'windows-latest'
  demands:
  - npm

variables:
  solution: '**/*.csproj'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  wwwrootDir: Tailspin.SpaceGame.Web/wwwroot
  dotnetSdkVersion: 3.1.300

steps:
- task: UseDotNet@2
  displayName: Use .NET Core SDK $(dotnetSdkVersion)
  inputs:
    packageType: sdk
    version: $(dotnetSdkVersion)

- task: Npm@1
  displayName: Run npm install
  inputs:
    verbose: false

- script: ./node_modules/.bin/node-sass $(wwwrootDir) --output $(wwwrootDir)
  displayName: Compile Sass assets

- task: gulp@1
  displayName: Run gulp tasks

- script: echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt
  displayName: Write build info
  workingDirectory: $(wwwrootDir)

# - task: NuGetToolInstaller@1

# - task: NuGetCommand@2
#   inputs:
#     restoreSolution: '$(solution)'


- task: DotNetCoreCLI@2
  displayName: Restore project dependencies
  inputs:
    command: restore
    projects: '$(solution)'

- task: DotNetCoreCLI@2
  displayName: Build the project - Release
  inputs:
    command: build
    arguments: --no-restore --configuration Release
    projects: '$(solution)'

- task: DotNetCoreCLI@2
  displayName: Publish the project - Release
  inputs:
    command: publish
    projects: '$(solution)'
    publishWebProjects: false
    arguments: --no-build --configuration Release --output $(Build.ArtifactStagingDirectory)/Release
    zipAfterPublish: true

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
  condition: succeeded()


